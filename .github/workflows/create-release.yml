name: Build and Release Multi-Platform

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.2
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Required for creating releases
  actions: read

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pyinstaller PyQt5 pyqtgraph numpy matplotlib h5py emdfile tqdm py4dstem
    
    - name: Build Windows executable
      run: |
        pyinstaller MibViewer.spec --distpath dist --workpath build
        if (-not (Test-Path "dist/MibViewer-Windows.exe")) {
          pyinstaller --onefile --windowed --name=MibViewer-Windows `
            --add-data "src;src" `
            --hidden-import=mib_viewer.gui.mib_viewer_pyqtgraph `
            --hidden-import=mib_viewer.io.mib_loader `
            --hidden-import=PyQt5 --hidden-import=pyqtgraph --hidden-import=numpy --hidden-import=h5py `
            src/mib_viewer/__main__.py
        }
    
    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: MibViewer-Windows-exe
        path: dist/MibViewer-Windows.exe
        retention-days: 30

  build-linux:
    runs-on: ubuntu-22.04  # Ubuntu 20.04 runners unavailable
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libglib2.0-0 libdbus-1-3 libfontconfig1 libxcb1 libxkbcommon0
    
    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install pyinstaller PyQt5 pyqtgraph numpy matplotlib h5py emdfile tqdm py4dstem
    
    - name: Build Linux executable
      run: |
        pyinstaller MibViewer.spec --distpath dist-linux --workpath build-linux
        if [ ! -f "dist-linux/MibViewer-Ubuntu22+" ]; then
          pyinstaller --onefile --windowed --name=MibViewer-Ubuntu22+ \
            --add-data "src:src" \
            --hidden-import=mib_viewer.gui.mib_viewer_pyqtgraph \
            --hidden-import=mib_viewer.io.mib_loader \
            --hidden-import=PyQt5 --hidden-import=pyqtgraph --hidden-import=numpy --hidden-import=h5py \
            --distpath dist-linux \
            src/mib_viewer/__main__.py
        fi
        chmod +x "dist-linux/MibViewer-Ubuntu22+"
    
    - name: Upload Linux executable
      uses: actions/upload-artifact@v4
      with:
        name: MibViewer-Linux
        path: dist-linux/MibViewer-Ubuntu22+
        retention-days: 30

  create-release:
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v4
      with:
        name: MibViewer-Windows-exe
        path: ./windows
        
    - name: Download Linux artifact
      uses: actions/download-artifact@v4
      with:
        name: MibViewer-Linux
        path: ./linux
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./windows/MibViewer-Windows.exe
          ./linux/MibViewer-Ubuntu22+
        name: MIB Viewer ${{ github.ref_name || format('v{0}', github.run_number) }}
        body: |
          # MIB Viewer ${{ github.ref_name || format('v{0}', github.run_number) }}
          
          ## üöÄ Multi-Platform Release
          
          ### **Windows**
          - **Download**: `MibViewer-Windows.exe` (attached below)
          - **Requirements**: Windows 10/11 (64-bit)
          - **Usage**: Double-click to run
          
          ### **Linux (Ubuntu/Debian)**
          - **Download**: `MibViewer-Ubuntu22+` (attached below)
          - **Requirements**: Ubuntu 22.04+ or equivalent (built on Ubuntu 22.04)
          - **Usage**: `chmod +x MibViewer-Ubuntu22+ && ./MibViewer-Ubuntu22+`
          
          ## ‚ú® Features
          - **EELS Analysis**: Hardware-accelerated PyQtGraph interface
          - **4D STEM Support**: Virtual detector analysis with BF/DF imaging
          - **Standalone**: No Python installation required
          - **Performance**: Real-time interaction with optimized updates
          
          ## üìã System Requirements
          - **Windows**: 10/11 (64-bit), 4GB+ RAM (8GB+ recommended)
          - **Linux**: Ubuntu 22.04+ or equivalent, 4GB+ RAM (8GB+ recommended)
          - **No additional software required** for either platform
          
          ## üîß Usage
          1. **Download** the appropriate executable for your platform
          2. **Windows**: Double-click `MibViewer-Windows.exe`
          3. **Linux**: `chmod +x MibViewer-Ubuntu22+ && ./MibViewer-Ubuntu22+`
          4. **Load Data**: File ‚Üí Load MIB File ‚Üí select your dataset
          5. **Analyze**: Switch between EELS and 4D STEM tabs
          
          ## üèóÔ∏è Build Information
          - **Built with**: GitHub Actions automated CI/CD
          - **Python**: 3.11
          - **GUI Framework**: PyQt5 + PyQtGraph
          - **Packaging**: PyInstaller
          - **GLIBC Compatibility**: Built on Ubuntu 22.04
          
          **Repository**: https://github.com/ondrejdyck/mib-viewer
        draft: false
        prerelease: false
        tag_name: ${{ github.ref_name || format('v{0}', github.run_number) }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}